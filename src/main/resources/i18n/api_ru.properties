openapi_description=Простой сервис для практики разработки API тестов.\n\n\n\
  В сервис вшиты следующие типы ошибок:\n\n\
  - функциональные ошибки\n\n\
  - ошибки контракта\n\n\
  - ошибки спецификации\n\n\
  - системные ошибки\n\n\
  \n\
  Если вызов API содержит зарегистрированный дефект, то в ответе от сервера вы непременно получите заголовок с \
  идентификатором дефекта (например `bug-id: 1`), а в некоторых случаях несколько. Для самопроверки вы можете вызвать метод `/api/bug?id={id}` и \
  получить полное описание дефекта по его идентификатору. Но не спешите пользоваться подсказкой, сперва убедитесь \
  в надежности своих выводов почитав логи сервиса (это крайне полезный навык).\n\n\
  \n\
  <details>\
  <summary>Так же вы можете проверить данные в БД (H2) или поэкспериментировать.</summary>\n\n\
  \n\
  Веб-консоль БД доступна по пути [current_host_port/h2](current_host_port/h2).\n\n\
  \n\
  Логин `admin`, пароль не требуется.\n\n\
  \n\
  Если вы хотите подключиться к базе данных по tcp, то вот URI\n\n\
  \n\
   - `jdbc:h2:tcp://localhost:9092/./h2/automatron;USER=admin;PASSWORD=;`\n\n\
  \n\n\
  </details>\n\n\
  \n\
  Если у вас есть идеи по развитию проекта, то излагайте [тут](https://github.com/touchbit/automatron/issues)</a>.\n\n\
  \n\
  <details>\
  <summary>Ссылки</summary>\n\n\
  - [Автор сего чуда](https://shaburov.github.io/)\n\n\
  - [Группа в телеграмм](https://t.me/automatron_qa)\n\n\
  - [GitHub репозиторий](https://github.com/touchbit/automatron)\n\n\
  - [DockerHub репозиторий](https://hub.docker.com/u/touchbit/automatron)\n\n\
  \n\
  </details>\n\
  \n\
  <details>\
  <summary>Лицензия</summary>\
  openapi_description_licence\
  </details>

#Headers
header_request_id_description=Уникальный идентификатор запроса. Если не передан клиентом, то сервер сформирует самостоятельно.
header_locale_description=Заголовок `Locale` сообщает серверу, какие языки понимает клиент. \n\n\n\
  При HTTP запросах из Swagger UI, если заголовок не передан - используется локализация документации (definition).

# Accounting controller
controller_accounting_description=Служба управления пользователями
resource_accounting_post_login_description=Аутентификация зарегистрированного активного пользователя

# Bug controller
controller_bug_description=Сервис для получения информации о дефектах, присутствующих в системе
resource_get_bugs_description=Получение списка всех дефектов, зарегистрированных в системе
resource_get_bug_description=Получение подробного описания дефекта по идентификатору





