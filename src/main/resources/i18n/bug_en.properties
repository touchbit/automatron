#
# Copyright (c) 2022 Shaburov Oleg
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

I18N_1648168652178=Logging sensitive data
I18N_1648168660813=When an authentication request is made, the service writes the user's password to the log.\n\
  CWE-532: Insertion of Sensitive Information into Log File\n\
  Information written to log files can be of a sensitive nature \
  and give valuable guidance to an attacker or expose sensitive user information.\n\
  While logging all information may be helpful during development stages, \
  it is important that logging levels be set appropriately before a product \
  ships so that sensitive user data and system information are not accidentally exposed to potential attackers.
I18N_1648168667369=No default value
I18N_1648168674474=The specification does not specify a default value for the 'Locale' header. \n\
  If there is no header, it is assumed that the default values will be used. \n\
  In case the header value is not included in the list of valid values, then the default value should be used \
  or the server should return a 400 error (depending on the server implementation).
I18N_1648169003925=Incorrect HTTP status
I18N_1648169012151=The user is in the 'BLOCKED' status and does not have access to the service.\n\
  \ Expected HTTP status 403 'Access denied'.
I18N_1648401705690=Default value usage
I18N_1648401737946=If a value is passed that is not included in the list of possible \
  (permissible) values, then the default value should be used.\n\
  In the case of a logout request, if the 'mode' field is sent with a value of 'foobar', \
  then the server will use the value 'ALL' when the default value 'CURRENT' is expected.
I18N_1648691005453=Missing response body
I18N_1648691079913=When getting a user by login, if the user is not found, \
  JSON with a list of errors should be returned. In fact, there is no response body.
I18N_1648691290758=HTTP response status
I18N_1648691345099=When getting a user by login, if the user is not found, HTTP status 404 should be returned. \
  In fact, we get HTTP status 200 'OK'.
I18N_1648766329247=Password storage
I18N_1648766458371=The password is stored in the database in plain text.\n\
  CWE-256: Plaintext Storage of a Password.\n\
  Password management issues occur when a password is stored in plaintext in an application's properties, \
  configuration file, or memory. Storing a plaintext password in a configuration file allows anyone who can \
  read the file access to the password-protected resource. In some contexts, even storage of a plaintext \
  password in memory is considered a security risk if the password is not cleared immediately after it is used.
I18N_1648769955903=Illegal unique constraints
I18N_1648770063686=Added a unique constraint on the PASSWORD column in the USER table in the database.\n\
  These kinds of errors are extremely rare, but it is definitely worth checking such cases.\n\
  The BugDTO.reason field also contains critical information about the system (SQL statement).
I18N_1648790774801=Demotion user role.
I18N_1648790967129=According to the requirements, it is forbidden to demote a user if \
  the roles of the authorized user and the user being upgraded are identical.\n\
  In other words, a user with the ADMIN role does not have the right to demote another user who also has the ADMIN role.
I18N_1648791832080=Handling an unspecified field
I18N_1648792130782=For the `PUT /api/accounting/users` method, the `password` field is not specified in the OpenAPI \
  specification, but in fact it is processed on the service side.\n\
  Such errors can occur if the same data model (DTO) and/or the same method of creating/updating an object (DAO) in \
  the database is used to call the creation/update of objects on the server.\
  For example, in the Java library `spring-data-jpa`, an object can be created \
  and updated in the database using a single method `JpaRepository.saveAndFlush()`.\n\
  In short, reusing existing data models (DTO/DAO/POJO) or methods is not always helpful.
I18N_1648871671095=Contradiction between description and DTO schema
I18N_1648871756780=The description of the partial user update resource describes the behavior of the system when \
  working with the user role (the behavior depends on the value of the role field). However, the role field in the \
  DTO schema is marked as optional, which leads to an error, since pre-validation for mandatory fields is disabled.
I18N_1648872173032=Get user password
I18N_1648872223112=Never and under no circumstances should the system return the user's password, whether it is \
  stored encrypted or not. It may seem that the defect is far-fetched, but in the author's practice there were \
  two cases when the service returned the password. In the first case, the encrypted password was placed in the \
  `Cookie` header as a unique client identifier. In the second case, the encrypted password was put into the body \
  of the html page as a CORS attribute.


